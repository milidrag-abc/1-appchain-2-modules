syntax = "proto3";

package remap.assets;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "remap/assets/params.proto";
import "remap/assets/asset.proto";

option go_package = "remap/x/assets/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/remap/assets/params";
  
  }
  
  // Queries a list of Asset items.
  rpc Asset    (QueryGetAssetRequest) returns (QueryGetAssetResponse) {
    option (google.api.http).get = "/remap/assets/asset/{id}";
  
  }
  rpc AssetAll (QueryAllAssetRequest) returns (QueryAllAssetResponse) {
    option (google.api.http).get = "/remap/assets/asset";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetAssetRequest {
  uint64 id = 1;
}

message QueryGetAssetResponse {
  Asset Asset = 1 [(gogoproto.nullable) = false];
}

message QueryAllAssetRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAssetResponse {
  repeated Asset                                  Asset      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

